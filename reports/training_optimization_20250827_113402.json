{
  "timestamp": "2025-08-27T11:33:59.831247",
  "model_analysis": {
    "total_params": 1231889,
    "trainable_params": 1231889,
    "layers": {
      "encoders.cable_group.input_projection.0": {
        "type": "Linear",
        "params": 1664,
        "trainable": true
      },
      "encoders.transformer.input_projection.0": {
        "type": "Linear",
        "params": 1152,
        "trainable": true
      },
      "encoders.adjacency_cluster.input_projection.0": {
        "type": "Linear",
        "params": 768,
        "trainable": true
      },
      "diffpool.assign_net.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "diffpool.assign_net.3": {
        "type": "Linear",
        "params": 2080,
        "trainable": true
      },
      "diffpool.assign_net.5": {
        "type": "Linear",
        "params": 660,
        "trainable": true
      },
      "diffpool.embed_net.0": {
        "type": "Linear",
        "params": 16512,
        "trainable": true
      },
      "diffpool.embed_net.3": {
        "type": "Linear",
        "params": 16512,
        "trainable": true
      },
      "task_heads.clustering_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.clustering_head.3": {
        "type": "Linear",
        "params": 650,
        "trainable": true
      },
      "task_heads.retrofit_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.retrofit_head.3": {
        "type": "Linear",
        "params": 65,
        "trainable": true
      },
      "task_heads.solar_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.solar_head.3": {
        "type": "Linear",
        "params": 65,
        "trainable": true
      },
      "task_heads.electrification_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.electrification_head.3": {
        "type": "Linear",
        "params": 195,
        "trainable": true
      },
      "task_heads.battery_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.battery_head.3": {
        "type": "Linear",
        "params": 130,
        "trainable": true
      },
      "task_heads.congestion_head.0": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "task_heads.congestion_head.3": {
        "type": "Linear",
        "params": 65,
        "trainable": true
      },
      "task_heads.thermal_head.0": {
        "type": "Linear",
        "params": 32896,
        "trainable": true
      },
      "task_heads.thermal_head.3": {
        "type": "Linear",
        "params": 129,
        "trainable": true
      },
      "complementarity_head.embed.0": {
        "type": "Linear",
        "params": 33024,
        "trainable": true
      },
      "complementarity_head.embed.3": {
        "type": "Linear",
        "params": 65792,
        "trainable": true
      },
      "centrality_head.centrality_net.0": {
        "type": "Linear",
        "params": 16640,
        "trainable": true
      },
      "centrality_head.centrality_net.3": {
        "type": "Linear",
        "params": 8256,
        "trainable": true
      },
      "centrality_head.centrality_net.5": {
        "type": "Linear",
        "params": 65,
        "trainable": true
      },
      "flow_head.flow_net.0": {
        "type": "Linear",
        "params": 65792,
        "trainable": true
      },
      "flow_head.flow_net.3": {
        "type": "Linear",
        "params": 32896,
        "trainable": true
      },
      "flow_head.flow_net.5": {
        "type": "Linear",
        "params": 129,
        "trainable": true
      },
      "attention.lin_key": {
        "type": "Linear",
        "params": 131072,
        "trainable": true
      },
      "attention.lin_query": {
        "type": "Linear",
        "params": 131072,
        "trainable": true
      },
      "attention.lin_value": {
        "type": "Linear",
        "params": 131072,
        "trainable": true
      },
      "attention.complementarity_net.0": {
        "type": "Linear",
        "params": 2056,
        "trainable": true
      },
      "attention.lin_out": {
        "type": "Linear",
        "params": 131200,
        "trainable": true
      }
    }
  },
  "loss_weights": {
    "training": {
      "supervised": 1.0,
      "pseudo": 0.5,
      "contrastive": 0.1,
      "consistency": 0.1,
      "physics": 1.0
    },
    "loss_config": {
      "w_cluster": 1.0,
      "w_placement": 1.0,
      "w_flow": 1.0,
      "w_physics": 10.0,
      "alpha_complementarity": 2.0,
      "alpha_network": 1.0,
      "alpha_temporal": 0.5,
      "alpha_cascade": 2.0,
      "alpha_balance": 1.0,
      "complementarity_weight": 1.0,
      "network_impact_weight": 2.0,
      "cascade_weight": 1.5,
      "quality_weight": 0.5,
      "min_cluster_size": 3,
      "max_cluster_size": 20,
      "use_constants": true
    },
    "normalized": {
      "supervised": 0.37037037037037035,
      "pseudo": 0.18518518518518517,
      "contrastive": 0.037037037037037035,
      "consistency": 0.037037037037037035,
      "physics": 0.37037037037037035
    }
  },
  "learning_dynamics": {
    "optimizer": {
      "type": "AdamW",
      "betas": [
        0.9,
        0.999
      ],
      "eps": 1e-08
    },
    "scheduler": {
      "type": "CosineAnnealingWarmRestarts",
      "T_0": 10,
      "T_mult": 2,
      "min_lr": 1e-06
    },
    "batch_size": 32,
    "num_epochs": 100,
    "learning_rate": 0.001,
    "weight_decay": 1e-05,
    "grad_clip": 1.0,
    "early_stopping_patience": 20,
    "scheduler_restarts": [
      10,
      30,
      70
    ]
  },
  "data_pipeline": {
    "batch_size": 32,
    "num_workers": 0,
    "pin_memory": true,
    "shuffle": true,
    "min_cluster_size": 3,
    "max_cluster_size": 20,
    "available_data": []
  },
  "mini_training_test": {
    "error": "Dimension out of range (expected to be in range of [-1, 0], but got -2)"
  },
  "issues": [],
  "recommendations": [],
  "optimization_scores": {
    "model_efficiency": 0.7,
    "loss_balance": 0.7014897528946684,
    "convergence_quality": 0.0,
    "data_efficiency": 0.7
  },
  "overall_score": 0.5253724382236671
}